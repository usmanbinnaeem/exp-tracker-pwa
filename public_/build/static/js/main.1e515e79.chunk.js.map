{"version":3,"sources":["Components/Header.tsx","context/AppReducer.tsx","context/GlobalState.tsx","Components/Balance.tsx","Components/IncomeExpenses.tsx","Components/Transaction.tsx","Components/TransactionList.tsx","Components/AddTransaction.tsx","App.tsx","firebase.js","index.tsx","serviceWorker.ts"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","htmlFor","onChange","e","target","placeholder","parseFloat","preventDefault","newTransaction","floor","random","dltTransaction","ExpenseTracker","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","messaging","requestPermission","then","getToken","token","console","log","ReactDOM","render","StrictMode","document","getElementById","swUrl","process","navigator","serviceWorker","register","result","swDev"],"mappings":"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","file":"static/js/main.1e515e79.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <h2 className=\"ExpenseHeader\">Expense Tracker</h2>;\r\n};\r\n\r\nexport default Header;\r\n","import { IAction, IState } from \"../Types/Types\";\r\n\r\nexport default (state: IState, action: IAction): IState => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { IState, ITrans } from \"../Types/Types\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//initial State\r\nconst initialState: IState = {\r\n  transactions: [],\r\n};\r\n\r\n//create context\r\n\r\nexport const GlobalContext = createContext<IState | any>(initialState);\r\n\r\n// provider component\r\n\r\nexport function GlobalProvider({ children }: any): JSX.Element {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  function deleteTransaction(id: ITrans) {\r\n    dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\r\n  }\r\n  function addTransaction(transaction: ITrans) {\r\n    dispatch({ type: \"ADD_TRANSACTION\", payload: transaction });\r\n  }\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { ITrans } from \"../Types/Types\";\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction: ITrans) => transaction.amount);\r\n  const total = amounts\r\n    .reduce((acc: number, item: number) => (acc += item), 0)\r\n    .toFixed(2);\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { ITrans } from \"../Types/Types\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts: Array<number> = transactions.map(\r\n    (transaction: ITrans) => transaction.amount\r\n  );\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money-plus\">+${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money-minus\">-${expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { ITrans } from \"../Types/Types\";\r\n\r\nconst Transaction: React.FC<ITrans> = (transaction) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <div>\r\n      <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n        {transaction.text}\r\n        <span>\r\n          {sign}${Math.abs(transaction.amount)}\r\n        </span>\r\n        <button\r\n          onClick={() => deleteTransaction(transaction.id)}\r\n          className=\"delete-btn\"\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\nexport default Transaction;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\nimport { ITrans } from \"../Types/Types\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction: ITrans) => (\r\n          <Transaction\r\n            id={transaction.id}\r\n            text={transaction.text}\r\n            amount={transaction.amount}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const { addTransaction } = useContext(GlobalContext);\r\n  const onSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n    setText(\"\");\r\n    setAmount(0);\r\n  };\r\n  return (\r\n    <>\r\n      <h3>Add New Transaction</h3>\r\n      <form>\r\n        <div className=\"form=control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              setText(e.target.value);\r\n            }}\r\n            placeholder=\"Enter Text\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount\r\n            {/* <br /> (negative - expense, positive - income) */}\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              setAmount(parseFloat(e.target.value));\r\n            }}\r\n            placeholder=\"Add amount\"\r\n          />\r\n        </div>\r\n        <button onClick={onSubmit} className=\"add-btn\">\r\n          Add Transaction\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n\r\n            const dltTransaction = {\r\n              id: Math.floor(Math.random() * 100000000),\r\n              text,\r\n              amount: -amount,\r\n            };\r\n            addTransaction(dltTransaction);\r\n            setText(\"\");\r\n            setAmount(0);\r\n          }}\r\n          className=\"dlt-btn\"\r\n        >\r\n          Add Expense\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default AddTransaction;\r\n","import React from \"react\";\nimport Header from \"./Components/Header\";\nimport Balance from \"./Components/Balance\";\nimport IncomeExpenses from \"./Components/IncomeExpenses\";\nimport TransactionList from \"./Components/TransactionList\";\nimport AddTransaction from \"./Components/AddTransaction\";\n\nimport \"./App.css\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction ExpenseTracker(): JSX.Element {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"wrap\">\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpenses />\n          <AddTransaction />\n        </div>\n        <div className=\"history-div\">\n          <TransactionList />\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default ExpenseTracker;\n","import firebase from \"firebase\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDX9EnRzvERRLk1uS-dPNcR3kbdON6yyzE\",\r\n  authDomain: \"pwa-exptracker.firebaseapp.com\",\r\n  databaseURL: \"https://pwa-exptracker.firebaseio.com\",\r\n  projectId: \"pwa-exptracker\",\r\n  storageBucket: \"pwa-exptracker.appspot.com\",\r\n  messagingSenderId: \"364006736226\",\r\n  appId: \"1:364006736226:web:b503d0fb4b38804a0c6c3b\",\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport swDev from \"./serviceWorker\";\nimport firebase from \"./firebase\";\n\nconst messaging = firebase.messaging();\n\nmessaging\n  .requestPermission()\n  .then(() => {\n    return messaging.getToken();\n  })\n  .then((token: any) => {\n    console.log(\"token\", token);\n  });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nswDev();\n","export default function swDev() {\n  let swUrl = `${process.env.PUBLIC_URL}/serviceWorker.js`;\n  navigator.serviceWorker.register(swUrl).then((result) => console.log(result));\n}\n"],"sourceRoot":""}